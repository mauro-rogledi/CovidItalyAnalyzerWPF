<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDate" xml:space="preserve">
    <value>All Date</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="BetweenDate" xml:space="preserve">
    <value>between date</value>
  </data>
  <data name="CasePerinhabitants" xml:space="preserve">
    <value>Case per 100.000 inhabitants</value>
  </data>
  <data name="Cases" xml:space="preserve">
    <value>Cases</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Chart</value>
  </data>
  <data name="Counties" xml:space="preserve">
    <value>Counties</value>
  </data>
  <data name="County" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="CurrentCases" xml:space="preserve">
    <value>Current Cases</value>
  </data>
  <data name="DailyCases" xml:space="preserve">
    <value>Daily cases</value>
  </data>
  <data name="DailyCasesSwabs" xml:space="preserve">
    <value>Daily cases and swabs</value>
  </data>
  <data name="DailyDeads" xml:space="preserve">
    <value>Daily deads</value>
  </data>
  <data name="DailySwabs" xml:space="preserve">
    <value>Daily swabs</value>
  </data>
  <data name="Deads" xml:space="preserve">
    <value>Deads</value>
  </data>
  <data name="DeadsInRange" xml:space="preserve">
    <value>Total deads ad range data</value>
  </data>
  <data name="DeadsPerinhabitants" xml:space="preserve">
    <value>Deads per 100.000 inhabitants</value>
  </data>
  <data name="DownloadedData" xml:space="preserve">
    <value>Data downloaded</value>
  </data>
  <data name="DownloadingData" xml:space="preserve">
    <value>Extracting data</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="GitConflict" xml:space="preserve">
    <value>Attention: There is a conflict</value>
  </data>
  <data name="GitFastForward" xml:space="preserve">
    <value>Tha data is now updated</value>
  </data>
  <data name="GitUpToDate" xml:space="preserve">
    <value>The data is already up to date</value>
  </data>
  <data name="HomeIsolation" xml:space="preserve">
    <value>Home isolation</value>
  </data>
  <data name="Hospital" xml:space="preserve">
    <value>Total hospitalized</value>
  </data>
  <data name="HospitalizedWithSymptoms" xml:space="preserve">
    <value>Hospitalized</value>
  </data>
  <data name="IntensiveCare" xml:space="preserve">
    <value>Intensive Care</value>
  </data>
  <data name="Italy" xml:space="preserve">
    <value>Italy</value>
  </data>
  <data name="LastSevenDays" xml:space="preserve">
    <value>Last 7 Days</value>
  </data>
  <data name="LastSixMonths" xml:space="preserve">
    <value>Last 6 Months</value>
  </data>
  <data name="LastThirtyDays" xml:space="preserve">
    <value>Last 30 Days</value>
  </data>
  <data name="LastThreeMonths" xml:space="preserve">
    <value>Last 3 Months</value>
  </data>
  <data name="LastTwoMonths" xml:space="preserve">
    <value>Last 2 Months</value>
  </data>
  <data name="LastTwoWeeks" xml:space="preserve">
    <value>Last 2 Weeks</value>
  </data>
  <data name="LastWeek" xml:space="preserve">
    <value>Last Week</value>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>Last Year</value>
  </data>
  <data name="NewCases" xml:space="preserve">
    <value>New cases</value>
  </data>
  <data name="NewCasesInRange" xml:space="preserve">
    <value>Total new cases at range data</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="PopolazioneProvince" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\PopolazioneProvince.json;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="PopolazioneRegioni" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\PopolazioneRegioni.json;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Regions" xml:space="preserve">
    <value>Regions</value>
  </data>
  <data name="RelationshipCasesSwabs" xml:space="preserve">
    <value>Relationship cases and swab</value>
  </data>
  <data name="SelectRange" xml:space="preserve">
    <value>Select Range</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Swabs" xml:space="preserve">
    <value>Swabs</value>
  </data>
  <data name="SwabsInRange" xml:space="preserve">
    <value>Total swabs ad range data</value>
  </data>
  <data name="SwabsPerinhabitants" xml:space="preserve">
    <value>Swabs per 100.000 inhabitants</value>
  </data>
  <data name="ThisMonth" xml:space="preserve">
    <value>This Month</value>
  </data>
  <data name="ThisWeek" xml:space="preserve">
    <value>This Week</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="TotalCases" xml:space="preserve">
    <value>Total cases</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="WeeklyCases" xml:space="preserve">
    <value>Weekly cases</value>
  </data>
  <data name="WeeklyCasesInhabitant" xml:space="preserve">
    <value>Weekly Cases for 100.000 Inabitant</value>
  </data>
  <data name="WeeklyCasesSwabs" xml:space="preserve">
    <value>Total weekly cases and swabs</value>
  </data>
  <data name="WeeklyDeads" xml:space="preserve">
    <value>Total weekly deads</value>
  </data>
  <data name="WeeklySwabs" xml:space="preserve">
    <value>Total weekly swabs</value>
  </data>
</root>